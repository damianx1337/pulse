name: Go

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.23.x' ]
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          #cache-dependency-path: src/go.mod
      # You can test your matrix by printing the current Go version

      - name: Display Go version
        run: go version

      #- name: Install dependencies
        #run: go mod tidy
      #  run: go get .

      - name: Build Binary
        run: |
          cd src
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/pulse-${{ matrix.goos }}-${{ matrix.goarch }}
      #  run: cd src && go build -o pulse
      #  run: go build -v ./...

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: src/dist/

      #- name: Test with the Go CLI
      #  run: go test

  release:
    name: Create GitHub Release
    needs: build # Ensure binaries are built before releasing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Binaries for release ${{ github.ref_name }}:
            - Built for multiple platforms.
          artifacts: |
            src/dist/pulse-linux-amd64
            src/dist/pulse-linux-arm64
            src/dist/pulse-darwin-amd64
            src/dist/pulse-darwin-arm64

  security-scan:
    name: Run Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -
          sudo mv bin/trivy /usr/local/bin/
      - name: Run Trivy Repo Scan
        run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .
      - name: Upload Trivy Report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.txt
